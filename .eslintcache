[{"/Users/andrejuliantama/Desktop/react-api-test/src/index.js":"1","/Users/andrejuliantama/Desktop/react-api-test/src/App.js":"2","/Users/andrejuliantama/Desktop/react-api-test/src/reportWebVitals.js":"3","/Users/andrejuliantama/Desktop/react-api-test/src/pages/home.js":"4","/Users/andrejuliantama/Desktop/react-api-test/src/components/user.js":"5","/Users/andrejuliantama/Desktop/react-api-test/src/components/userList.js":"6"},{"size":500,"mtime":1608305721497,"results":"7","hashOfConfig":"8"},{"size":395,"mtime":1608307365805,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608305721499,"results":"10","hashOfConfig":"8"},{"size":5712,"mtime":1608484528345,"results":"11","hashOfConfig":"8"},{"size":997,"mtime":1608487761194,"results":"12","hashOfConfig":"8"},{"size":907,"mtime":1608483965240,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13l2bb8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/andrejuliantama/Desktop/react-api-test/src/index.js",[],["28","29"],"/Users/andrejuliantama/Desktop/react-api-test/src/App.js",[],"/Users/andrejuliantama/Desktop/react-api-test/src/reportWebVitals.js",[],"/Users/andrejuliantama/Desktop/react-api-test/src/pages/home.js",["30","31","32"],"import React, {Component } from 'react';\nimport '../styles/home.scss';\nimport Axios from 'axios';\nimport UserList from '../components/userList.js';\nimport Users from '../components/user.js';\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nclass Home extends Component {\n\tstate = {\n\t\tuserList: [],\n\t\tcurrUser: {id: 0, nama: '', email: '', hp: ''},\n\t\tid: 0,\n\t\tcurrID: 0,\n\t\tcurrNama: '',\n\t\tcurrEmail: '',\n\t\tcurrHP: '',\n\t\tmessage: \"*Initial Message Value*\",\n\t\teditModalIsOpen: false\n\n\t}\n\n\n\thandleID(num) {\n\t\tconst tempId = this.state.id + num\n\t\tthis.setState({\n\t\t\tid: tempId,\n\t\t\tcurrID: tempId\n\t\t})\n\t\tconsole.log('id sekarang'+ this.state.id)\n\t}\n\n\thandleNama(e) {\n\t\tthis.setState({\n\t\t\tcurrNama:  e.target.value\n\t\t})\n\t}\n\n\thandleEmail(e) {\n\t\tthis.setState({\n\t\t\tcurrEmail: e.target.value,\n\t\t})\t\n\t}\n\n\thandleHP(e) {\n\t\tthis.setState({\n\t\t\tcurrHP: e.target.value,\n\t\t})\t\n\t}\n\n\thandleUser() {\n\t\tconst temp = { id: this.state.currID, nama: this.state.currNama, email: this.state.currEmail, hp: this.state.currHP }\n\t\tthis.setState({\n\t\t\tcurrUser: temp\n\t\t})\n\t\tconsole.log(this.state.currUser);\n\t}\n\n\taddUser = async (e) => {\n\t\te.preventDefault()\n\t\tawait this.handleUser()\n\t\tconst newUser = this.state.currUser\n\t\tif (newUser.nama !== '' && newUser.email !== '' && newUser.hp !== ''){\n\t\t\tconst users = [...this.state.userList, newUser]\n\t\t\tconsole.log(users)\n\t\t\tthis.setState({\n\t\t\t\tuserList: users,\n\t\t\t\tcurrUser: { id: this.state.id, nama: '', email: '', hp: ''}\n\t\t\t})\n\t\t}\n\t\tconsole.log('User Added')\n\t\tconsole.log('userlist'+this.state.userList)\n\t\tthis.handleID(1)\n\t}\n\n\tdeleteUser = (id) => {\n\t\tconst filteredUser = this.state.userList.filter(user => {\n\t\t\treturn user.id !== id\n\t\t})\n\t\tconsole.log(filteredUser)\n\t\tthis.setState({ \n\t\t\tuserList: filteredUser \n\t\t})\n\t}\n\n\teditNama = (nama,id) =>{\n    console.log(\"nama:\"+this.state.userList);\n    const list = this.state.userList;\n    list.map(user=>{      \n      if(user.id===id){\n        console.log(user.id +\"    \"+id)\n        user.nama= nama;\n      }\n    })\n    this.setState({\n      items: list\n    })\n    \n   \n  }\n\n\t\n\n  openModal = (id) => {\n\t\tthis.setState({\n\t\t\teditModalIsOpen: true\n\t\t})  \n\t}\n\n \n  closeModal(){\n\t\tthis.setState({\n\t\t\teditModalIsOpen: false\n\t\t})\n  }\n\n\n\t//AXIOS POST GET UPDATE DELETE\n\t// const [message, setMessage] = useState(\"*Initial Message Value*\");\n\n\thttpPostUser = async (e) => {\n\t\tlet data = {\n\t\t\tname: \"Joni\",\n\t\t\tjob: \"Rebahan\"\n\t\t}\n\n\t\tlet config = {\n\t\t\tmethod: 'post',\n\t\t\turl: 'https://reqres.in/api/users',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tdata: data\n\t\t};\n\n\t\tAxios(config)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data)\n\t\t\t\tconst newUser = {\n\t\t\t\t\tid: response.data.id,\n\t\t\t\t\tname: response.data.name,\n\t\t\t\t\tjob: response.data.job\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(response.data)\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(error)\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\thttpGetUser = async (e) => {\n\n\t\tlet config = {\n\t\t\tmethod: 'get',\n\t\t\turl: 'https://reqres.in/api/users?page=2',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t};\n\n\t\tAxios(config)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data.data)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(response.data)\n\t\t\t\t})\n\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(error)\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\thttpUpdateUser = async (e) => {\n\t\tlet data = {\n\t\t\tname: \"Gondok\",\n\t\t\tjob: \"Jalan\"\n\t\t}\n\n\t\tlet config = {\n\t\t\tmethod: 'put',\n\t\t\turl: 'https://reqres.in/api/users?page=2',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tdata: data\n\t\t};\n\n\t\tAxios(config)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(response.data)\n\t\t\t\t})\n\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(error)\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\thttpDeleteUser = async (e) => {\n\t\tlet data = {\n\t\t\tname: \"Gondok\",\n\t\t\tjob: \"Jalan\"\n\t\t}\n\n\t\tlet config = {\n\t\t\tmethod: 'delete',\n\t\t\turl: 'https://reqres.in/api/users?page=2',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tdata: data\n\t\t};\n\n\t\tawait Axios(config)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(response.config.method + response.config.data)\n\t\t\t\t})\n\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:JSON.stringify(error)\n\t\t\t\t})\n\t\t\t})\n\t}\n\n\trender(){\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<div className=\"title\">Form</div>\n\t\t\t\t<UserList \n\t\t\t\t\taddUser={this.addUser}\n\t\t\t\t\thandleNama={(e) => {this.handleNama(e)}}\n\t\t\t\t\thandleEmail={(e) => {this.handleEmail(e)}}\n\t\t\t\t\thandleHP={(e) => {this.handleHP(e)}}\n\t\t\t\t\tcurrentUser={this.state.currUser}\n\t\t\t\t/>\n\t\t\t\t<Users\n\t\t\t\t\tentries={this.state.userList}\n\t\t\t\t\tdeleteUser={this.deleteUser}\n\t\t\t\t\teditNama={this.editNama}\n\t\t\t\t/>\n\n\t\t\t<div className=\"title mt-4\">HTTP Buttons</div>\n\t\t\t<div className=\"button-container mt-2\">\n\t\t\t\t<button className=\"mr-2\" onClick={(e) => { this.httpPostUser(e) }}>Post User</button>\n\t\t\t\t<button className=\"mr-2\" onClick={(e) => { this.httpGetUser(e) }}>Get User</button>\n\t\t\t\t<button className=\"mr-2\" onClick={(e) => { this.httpUpdateUser(e) }}>Update User</button>\n\t\t\t\t<button className=\"mr-2\" onClick={(e) => { this.httpDeleteUser(e) }}>Delete User</button>\n\t\t\t</div>\n\t\t\t<div className=\"message-responses mt-4\">\n\t\t\t\t{this.state.message}\n\t\t\t</div>\n\n\t\t\t\n\n\n\t\t</div>\n\t);\n\t}\n}\nexport default Home;","/Users/andrejuliantama/Desktop/react-api-test/src/components/user.js",["33"],"/Users/andrejuliantama/Desktop/react-api-test/src/components/userList.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":7,"column":7,"nodeType":"40","messageId":"41","endLine":7,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":98,"column":18,"nodeType":"44","messageId":"45","endLine":98,"endColumn":20},{"ruleId":"38","severity":1,"message":"46","line":148,"column":11,"nodeType":"40","messageId":"41","endLine":148,"endColumn":18},{"ruleId":"38","severity":1,"message":"47","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":20},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'customStyles' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'newUser' is assigned a value but never used.","'ReactTooltip' is defined but never used.","no-global-assign","no-unsafe-negation"]